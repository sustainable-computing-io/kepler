name: image

on: # yamllint disable-line rule:truthy
  workflow_call:
    inputs:
      imageTag:
        default: latest
        type: string
      pushImage:
        default: true
        type: boolean
    secrets:
      username:
        required: true
      password:
        required: true

jobs:
  image_build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
      attestations: write
      packages: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - IMAGE_NAME: kepler
            IMAGE_FILE: build/Dockerfile
            PLATFORMS: linux/amd64,linux/arm64
            BUILD_ARGS: |
              INSTALL_DCGM=false
              INSTALL_HABANA=false
            LABEL: ${{ inputs.imageTag }}
          - IMAGE_NAME: kepler
            IMAGE_FILE: build/Dockerfile
            PLATFORMS: linux/amd64
            BUILD_ARGS: |
              INSTALL_DCGM=true
              INSTALL_HABANA=false
            LABEL: ${{ inputs.imageTag }}-dcgm
          - IMAGE_NAME: kepler
            IMAGE_FILE: build/Dockerfile
            PLATFORMS: linux/amd64
            BUILD_ARGS: |
              INSTALL_DCGM=false
              INSTALL_HABANA=true
            LABEL: ${{ inputs.imageTag }}-habana
          - IMAGE_NAME: kepler-validator
            IMAGE_FILE: build/Dockerfile.kepler-validator
            BUILD_ARGS: ""
            PLATFORMS: linux/amd64
            LABEL: ${{ inputs.imageTag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          # NOTE:  setting fetch-depth to 0 to retrieve the entire history
          # instead of a shallow-clone so that all tags are fetched as well.
          # This is necessary for computing the VERSION using `git describe`
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          image: tonistiigi/binfmt:qemu-v8.1.5

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set up cosign
        uses: sigstore/cosign-installer@main

      - name: Login to Quay
        if: ${{ inputs.pushImage }}
        uses: docker/login-action@v3
        with:
          registry: quay.io/sustainable_computing_io
          username: ${{ secrets.username }}
          password: ${{ secrets.password }}

      - name: Build and push image
        id: build-push-image
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: ${{matrix.PLATFORMS}}
          push: ${{ inputs.pushImage }}
          build-args: ${{matrix.BUILD_ARGS}}
          tags: quay.io/sustainable_computing_io/${{matrix.IMAGE_NAME}}:${{matrix.LABEL}}
          labels: ${{matrix.LABEL}}
          file: ${{matrix.IMAGE_FILE}}

      - name: Sign images with GitHub OIDC Token
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch')}}
        run: |
          cosign sign -y quay.io/sustainable_computing_io/${{matrix.IMAGE_NAME}}:${{matrix.LABEL}}@${{ steps.build-push-image.outputs.digest }}

      - name: Generate image attestation
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch')}}
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: quay.io/sustainable_computing_io/${{matrix.IMAGE_NAME}}
          subject-digest: ${{ steps.build-push-image.outputs.digest }}
          push-to-registry: ${{ inputs.pushImage }}

      - name: Generate SBOM
        uses: anchore/sbom-action@v0.17.8
        with:
          image: quay.io/sustainable_computing_io/${{matrix.IMAGE_NAME}}:${{matrix.LABEL}}
          artifact-name: sbom-${{matrix.IMAGE_NAME}}-${{matrix.LABEL}}.json
          output-file: ./sbom-${{matrix.IMAGE_NAME}}-${{matrix.LABEL}}.spdx.json

      - name: save Kepler image SBOM as artifact
        if: ${{ inputs.pushImage }}
        uses: actions/upload-artifact@v4.4.3
        with:
          name: sbom-${{matrix.IMAGE_NAME}}-${{matrix.LABEL}}.spdx.json
          path: ./sbom-${{matrix.IMAGE_NAME}}-${{matrix.LABEL}}.spdx.json
          retention-days: 1

      - name: Generate SBOM attestation
        uses: actions/attest-sbom@v1
        if: ${{ inputs.pushImage }}
        with:
          subject-name: quay.io/sustainable_computing_io/${{matrix.IMAGE_NAME}}
          subject-digest: ${{ steps.build-push-image.outputs.digest }}
          sbom-path: ./sbom-${{matrix.IMAGE_NAME}}-${{matrix.LABEL}}.spdx.json
          push-to-registry: ${{ inputs.pushImage }}
