name: Check Config Changes

on: # yamllint disable-line rule:truthy
  pull_request:

# default permissions as read only
permissions: read-all

jobs:
  check-changes:
    runs-on: ubuntu-latest
    outputs:
      changes: ${{ steps.filter.outputs.config }}
      doc_changes: ${{ steps.filter.outputs.doc }}
      compose_dev_changes: ${{ steps.filter.outputs.compose_dev }}
      compose_latest_changes: ${{ steps.filter.outputs.compose_latest }}
      hack_changes: ${{ steps.filter.outputs.hack }}
      manifest_changes: ${{ steps.filter.outputs.manifest }}
      helm_changes: ${{ steps.filter.outputs.helm }}
    steps:
      - name: Checkout source
        uses: actions/checkout@v5

      - name: Filter changes
        uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            config:
              - 'config/**/*.go'
            doc:
              - 'docs/user/configuration/configuration.md'
            compose_dev:
              - 'compose/dev/kepler-dev/etc/kepler/config.yaml'
            compose_latest:
              - 'compose/default/kepler/etc/kepler/config.yaml'
            hack:
              - 'hack/config.yaml'
            manifest:
              - 'manifests/k8s/configmap.yaml'
            helm:
              - 'manifests/helm/kepler/values.yaml'

  generate-comment-message:
    needs: check-changes
    if: >-
      needs.check-changes.outputs.changes == 'true' &&
      (
        needs.check-changes.outputs.doc_changes != 'true' ||
        needs.check-changes.outputs.compose_dev_changes != 'true' ||
        needs.check-changes.outputs.compose_latest_changes != 'true' ||
        needs.check-changes.outputs.hack_changes != 'true' ||
        needs.check-changes.outputs.manifest_changes != 'true' ||
        needs.check-changes.outputs.helm_changes != 'true'
      )
    runs-on: ubuntu-latest
    steps:
      - name: Generate comment message
        run: |
          {
            echo "⚠️ Config changes detected in this PR"
            echo "Please make sure that the config changes are updated in the following places as part of this PR:"
            if [[ "${{ needs.check-changes.outputs.doc_changes }}" != "true" ]]; then
              echo "- docs/user/configuration/configuration.md"
            fi
            if [[ "${{ needs.check-changes.outputs.compose_dev_changes }}" != "true" ]]; then
              echo "- compose/dev/kepler-dev/etc/kepler/config.yaml"
            fi
            if [[ "${{ needs.check-changes.outputs.compose_latest_changes }}" != "true" ]]; then
              echo "- compose/default/kepler/etc/kepler/config.yaml"
            fi
            if [[ "${{ needs.check-changes.outputs.hack_changes }}" != "true" ]]; then
              echo "- hack/config.yaml"
            fi
            if [[ "${{ needs.check-changes.outputs.manifest_changes }}" != "true" ]]; then
              echo "- manifests/k8s/configmap.yaml"
            fi
            if [[ "${{ needs.check-changes.outputs.helm_changes }}" != "true" ]]; then
              echo "- manifests/helm/kepler/values.yaml"
            fi
          } > /tmp/message-${{ github.event.pull_request.number }}.txt

      # NOTE: Uploading the message as an artifact so that PR Comment workflow can use it to
      # add comment on PR with the message.
      - name: Upload message
        uses: actions/upload-artifact@v4
        with:
          name: message
          path: /tmp/message-${{ github.event.pull_request.number }}.txt
          retention-days: 1 # Keep artifact for 1 days
