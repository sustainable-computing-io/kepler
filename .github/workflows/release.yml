name: Release
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      tag:
        description: "Tag name, e.g. v0.4"
        default: v0.4
        required: true
      release:
        description: "Release name, e.g. release-0.4"
        default: release-0.4
        required: true


jobs:
  build:
    name: Upload Release Asset
    runs-on: ubuntu-latest
    steps:
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d')"

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create tag
        uses: actions/github-script@v5
        with:
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'refs/tags/${{ github.event.inputs.tag }}',
              sha: context.sha
            })

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.tag }}
          release_name: ${{ github.event.inputs.release }}
          draft: false
          prerelease: false

      - name: Create RPM spec for the release
        id: build_spec_file
        run: |
          cp -R  packaging/rpm/kepler.spec packaging/rpm/kepler_build.spec

          echo "%global _VERSION_ ${{ github.event.inputs.tag }}" | cat - packaging/rpm/kepler_build.spec > temp && mv temp packaging/rpm/kepler_build.spec
          echo "%global _RELEASE_ ${{ github.event.inputs.release }}" | cat - packaging/rpm/kepler_build.spec > temp && mv temp packaging/rpm/kepler_build.spec
          echo "%global _COMMITTER_ ${{ github.event.pull_request.head.sha }}" | cat - packaging/rpm/kepler_build.spec > temp && mv temp packaging/rpm/kepler_build.spec
          echo "%global _TIMESTAMP_ ${{ steps.date.outputs.date }}" | cat - packaging/rpm/kepler_build.spec > temp && mv temp packaging/rpm/kepler_build.spec
          echo "%global _CHANGELOG_ ${{ github.event.head_commit.message }}" | cat - packaging/rpm/kepler_build.spec > temp && mv temp packaging/rpm/kepler_build.spec

          ls -la packaging/rpm/kepler_build.spec

      - name: Build RPM package
        id: rpm_build
        env:
          _VERSION_ : ${{ github.event.inputs.tag }}
          _RELEASE_: ${{ github.event.inputs.release }}
          _COMMITTER_: ${{ github.event.pull_request.head.sha }}
          _TIMESTAMP_: ${{ steps.date.outputs.date }}
          _CHANGELOG_: ${{ github.event.head_commit.message }}
        run: make build_rpm
          
      - if: startsWith(github.event.ref, 'refs/tags/')
        name: Release
        uses: softprops/action-gh-release@master
        with:
            files: |
              kepler-*.rpm.tar.gz
              /root/rpmbuild/RPMs/
  
  create-release-branch:
    name: Create release branch
    needs: [build]
    runs-on: ubuntu-latest
    steps: 
    - name: Create release branch
      uses: peterjgrainger/action-create-branch@v2.2.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        branch: ${{ github.event.inputs.release }}
        sha: '${{ github.event.pull_request.head.sha }}'
      
  
  push-image:
    name: Push image to the registry
    needs: [build]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to Quay
      uses: docker/login-action@v1
      with:
        registry: quay.io/sustainable_computing_io
        username: ${{ secrets.BOT_NAME }}
        password: ${{ secrets.BOT_TOKEN }}

    - name: Build and push
      uses: docker/build-push-action@v4
      with:
          context: .
          platforms: linux/amd64
          push: true
          tags: quay.io/sustainable_computing_io/kepler
          labels: latest, ${{ github.event.inputs.release }}
          file: build/Dockerfile
