name: Release
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      tag:
        description: "Tag name, e.g. v0.4"
        default: v0.4
        required: true
      release:
        description: "Release name, e.g. release-0.4"
        default: release-0.4
        required: true
      rpm_version:
        description: "rpm version, e.g. 0.4"
        default: 0.4
        required: true
      rpm_release:
        description: "rpm release, e.g. 1"
        default: 1
        required: true
      committer:
        description: "rpm committer, e.g. gh-actions"
        default: "gh-actions"
        required: false
      arch:
        description: "rpm arch, e.g. x86_64"
        default: "x86_64"
        required: false



jobs:
  build:
    name: Upload Release Asset
    runs-on: ubuntu-latest
    steps:
      - name: Get current date
        id: date
        run: echo "name=date::$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT

      - name: Checkout code
        uses: actions/checkout@v4.1.1

      - name: Create tag
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'refs/tags/${{ github.event.inputs.tag }}',
              sha: context.sha
            })

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.tag }}
          release_name: ${{ github.event.inputs.release }}
          draft: false
          prerelease: false

      - name: Build RPM packages
        id: rpm_build
        env:
          _VERSION_ : ${{ github.event.inputs.rpm_version }}
          _RELEASE_: ${{ github.event.inputs.rpm_release }}
          _COMMITTER_: ${{ github.event.inputs.committer }}
          _ARCH_: ${{ github.event.inputs.arch }}
        run: |
          make containerized_build_rpm
          make containerized_build_container_rpm
          cd _output/rpmbuild/
          sudo tar czvf /tmp/kepler.rpm.tar.gz RPMS/
          
      - name: release rpm
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: /tmp/kepler.rpm.tar.gz
          asset_name: kepler.rpm.tar.gz
          asset_content_type: application/gzip
  
  create-release-branch:
    name: Create release branch
    needs: [build]
    runs-on: ubuntu-latest
    steps: 
    - name: Create release branch
      uses: peterjgrainger/action-create-branch@v3.0.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        branch: ${{ github.event.inputs.release }}
        sha: '${{ github.event.pull_request.head.sha }}'
      
  
  push-image:
    name: Push image to the registry
    needs: [build]
    uses: ./.github/workflows/image.yml
    with:
      imageTag: ${{ github.event.inputs.release }}
    secrets:
        username: ${{ secrets.BOT_NAME }}
        password: ${{ secrets.BOT_TOKEN }}
    
  releasepage:
    name: download Kepler image SBOM
    needs: [push-image]
    runs-on: ubuntu-latest
    steps: 
      - name: download from artifact
        uses: actions/download-artifact@v4
        with:
          name: sbom-kepler-${{ github.event.inputs.release }}.spdx.json

      - name: Attach SBOM to release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.event.inputs.tag }}
          files: ./sbom-kepler-${{ github.event.inputs.release }}.spdx.json
          body_path: CHANGELOG.md
