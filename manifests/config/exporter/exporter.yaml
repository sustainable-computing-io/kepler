apiVersion: v1
kind: Namespace
metadata:
  name: system
  labels:
    security.openshift.io/scc.podSecurityLabelSync: "false"
    pod-security.kubernetes.io/enforce: privileged
    pod-security.kubernetes.io/warn: privileged
    pod-security.kubernetes.io/audit: privileged
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kepler-cfm
  namespace: system
data:
  KEPLER_NAMESPACE: $(KEPLER_NAMESPACE)
  KEPLER_LOG_LEVEL: "1"
  METRIC_PATH: "/metrics"
  BIND_ADDRESS: "0.0.0.0:9102"
  ENABLE_GPU: "true"
  ENABLE_EBPF_CGROUPID: "true"
  EXPOSE_HW_COUNTER_METRICS: "true"
  EXPOSE_IRQ_COUNTER_METRICS: "true"
  EXPOSE_KUBELET_METRICS: "true"
  EXPOSE_CGROUP_METRICS: "true"
  ENABLE_PROCESS_METRICS: "false"
  CPU_ARCH_OVERRIDE: ""
  CGROUP_METRICS: '*'
  REDFISH_PROBE_INTERVAL_IN_SECONDS: "60"
  REDFISH_SKIP_SSL_VERIFY: "true"
  MODEL_CONFIG: |
    CONTAINER_COMPONENTS_ESTIMATOR=false
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: kepler-exporter
  namespace: system
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: exporter
      app.kubernetes.io/name: kepler-exporter
  template:
    metadata:
      labels:
        app.kubernetes.io/component: exporter
        app.kubernetes.io/name: kepler-exporter
    spec:
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
      dnsPolicy: ClusterFirstWithHostNet
      serviceAccountName: kepler-sa
      containers:
      - name: kepler-exporter
        image: kepler:latest
        imagePullPolicy: Always
        resources:
          requests:
            memory: "400Mi"
            cpu: "100m"
        securityContext:
          privileged: true
        command:
        - /bin/sh
        - -c
        args:
        - /usr/bin/kepler -v=$(KEPLER_LOG_LEVEL) -kernel-source-dir=/usr/share/kepler/kernel_sources -redfish-cred-file-path=/etc/redfish/redfish.csv
        ports:
        - containerPort: 9102
          name: http
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /healthz
            port: 9102
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 60
          successThreshold: 1
          timeoutSeconds: 10
        volumeMounts:
        - mountPath: /lib/modules
          name: lib-modules
        - mountPath: /sys
          name: tracing
        - mountPath: /proc
          name: proc
        - name: cfm
          mountPath: /etc/kepler/kepler.config
          readOnly: true
        - name: redfish
          mountPath: /etc/redfish
          readOnly: true
        env:
        - name: NODE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
      volumes:
      - name: lib-modules
        hostPath:
          path: /lib/modules
          type: Directory
      - name: tracing
        hostPath:
          path: /sys
          type: Directory
      - name: proc
        hostPath:
          path: /proc
          type: Directory
      - name: cfm
        configMap:
          name: kepler-cfm
      - name: redfish
        secret:
          secretName: redfish
---
kind: Service
apiVersion: v1
metadata:
  name: kepler-exporter
  namespace: system
  labels:
    app.kubernetes.io/component: exporter
    app.kubernetes.io/name: kepler-exporter
spec:
  clusterIP: None
  selector:
    app.kubernetes.io/component: exporter
    app.kubernetes.io/name: kepler-exporter
  ports:
  - name: http
    port: 9102
    targetPort: http
