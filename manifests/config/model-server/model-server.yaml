apiVersion: v1
kind: ConfigMap
metadata:
  name: kepler-model-server-cfm
  namespace: system
data:
  MODEL_PATH: /data/models
  PROM_SERVER: 'http://prometheus-k8s.monitoring.svc.cluster.local:9090'
  PROM_QUERY_INTERVAL: '20'
  PROM_QUERY_STEP: '3'
  PROM_HEADERS: ''
  PROM_SSL_DISABLE: 'true'
  INITIAL_MODELS_LOC: https://raw.githubusercontent.com/sustainable-computing-io/kepler-model-server/main/tests/test_models
  INITIAL_MODEL_NAMES: |
    AbsComponentModelWeight=KerasCompWeightFullPipeline
    AbsComponentPower=KerasCompFullPipeline
    DynComponentPower=ScikitMixed
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kepler-model-server
  namespace: system
  labels:
    app.kubernetes.io/component: model-server
    app.kubernetes.io/name: kepler-model-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: model-server
      app.kubernetes.io/name: kepler-model-server
  template:
    metadata:
      labels:
        app.kubernetes.io/component: model-server
        app.kubernetes.io/name: kepler-model-server
    spec:
      volumes:
      - name: cfm
        configMap:
          name: kepler-model-server-cfm
      - emptyDir: {}
        name: model-data
      containers:
      - name: server-api
        image: kepler-model-server:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8100
        volumeMounts:
          - name: cfm
            mountPath: /etc/config
            readOnly: true
          - name: model-data
            mountPath: /data
            readOnly: false
        command: ["python3.8",  "model_server.py"]
    
---
kind: Service
apiVersion: v1
metadata:
  name: kepler-model-server
  namespace: system
  labels:
    app.kubernetes.io/component: model-server
    app.kubernetes.io/name: kepler-model-server
spec:
  clusterIP: None
  selector:
    app.kubernetes.io/component: model-server
    app.kubernetes.io/name: kepler-model-server
  ports:
  - name: http
    port: 8100
    targetPort: http